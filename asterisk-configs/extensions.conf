# extensions.conf - the Asterisk dial plan file

# extensions.conf, is a configuration file used in **Asterisk**, an open-source communication server. 
#It defines the dial plan, which is essentially a set of rules that dictate how calls are routed and handled within the system.


# [internal]: This is a context, which groups related extensions. Calls within this context are handled according to the rules defined here.
# make it match the context in pjsip.conf 
[internal]

;=============direct calls=========

exten => 1001,1,Dial(PJSIP/zoiper1,,Tt) # This extension routes calls to the SIP endpoint `zoiper1` when `1001` is dialed.
exten => 1002,1,Dial(PJSIP/zoiper2,,Tt) # This extension routes calls to the SIP endpoint `zoiper2` when `1002` is dialed.

;=============== ivr menu ==============
# This extension is used to create an Interactive Voice Response (IVR) menu, 
# which allows callers to interact with the system by entering digits on their phone keypads.
# in this case the caller will enter his phone number and pin to check his balance by calling 115
exten => 115,1,Answer() 
 same=> n,Goto(ivr-menu,start,1)

[ivr-menu]
exten => start,1,Answer()
    same => n,AGI(googletts.agi,"Hello! To assist you, please enter your phone number.",en)
    same => n,Read(phone,,10)

    same => n,Playback(en/beep)
    same => n,AGI(googletts.agi,"Great! Now, please enter your PIN to continue.",en)
    same => n,Read(pin,,4)

    same => n,AGI(check_balance.py,${phone},${pin})
    same => n,NoOp(Balance is ${balance})

    same=> n,AGI(googletts.agi,"Your current balance is ${balance}. If you need further assistance, feel free to reach out.",en)
    same => n,Background(en/beep)
    same => n,Hangup()

# This file is crucial for configuring how calls are processed in an Asterisk-based VoIP system.
# PS: I HAVE USED https://github.com/zaf/asterisk-googletts FOR TTS ===============================================================
# if you prefer to use a sound instead of googletts, you can use the audios in the `audio folder` or generate your own using https://speechgen.io/